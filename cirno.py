#!/usr/bin/env python3

from discord.ext import commands

from modules import first_run

from modules.connections import bot_token as bot_token

first_run.create_tables()

initial_extensions = [
    "cogs.BotManagement",
    "cogs.ScoreTracking",
]


class Cirno(commands.Bot):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.background_tasks = []
        self.app_version = (open(".version", "r+").read()).rstrip()
        self.description = f"Cirno {self.app_version}"

        for extension in initial_extensions:
            try:
                self.load_extension(extension)
            except Exception as e:
                print(e)

    async def close(self):
        # Cancel all Task object generated by cogs.
        # This prevents any task still running due to having long sleep time.
        for task in self.background_tasks:
            task.cancel()

        # Run actual discord.py close.
        await super().close()

    async def on_ready(self):
        print("Logged in as")
        print(self.user.name)
        print(self.user.id)
        print("------")
        await first_run.add_admins(self)


client = Cirno(command_prefix=",")
client.run(bot_token)
